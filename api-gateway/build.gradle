plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.diffplug.spotless' version '7.0.2'
	id "com.gorylenko.gradle-git-properties" version "2.4.1"

}

group = 'com.damir'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2024.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//OpenApi Documentation
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'
	implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.8.4'

	//Netty
	runtimeOnly 'io.netty:netty-resolver-dns-native-macos:4.1.117.Final:osx-aarch_64'


}

// Docker Image Configuration
springBoot {
	buildInfo {
		properties {
			artifact = 'api-gateway'
			version = '0.0.1-SNAPSHOT'
			group = 'com.damir'
			name = '1234user1234/bookstore-api-gateway'
		}
	}
}

bootBuildImage {
	imageName = '1234user1234/bookstore-api-gateway'
	builder = 'dashaun/builder:tiny'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
